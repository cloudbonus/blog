--liquibase formatted sql

--changeset haurylau:1
CREATE SCHEMA IF NOT EXISTS blogging_platform;

--changeset haurylau:2
CREATE TABLE IF NOT EXISTS blogging_platform.user (
    user_id    bigint GENERATED BY DEFAULT AS IDENTITY,
    login      text UNIQUE NOT NULL,
    password   text        NOT NULL,
    email      text UNIQUE NOT NULL,
    created_at timestamptz NOT NULL,
    last_login timestamptz
);

ALTER TABLE IF EXISTS blogging_platform.user
ADD CONSTRAINT user_pkey PRIMARY KEY (user_id);

--changeset haurylau:3
CREATE TABLE IF NOT EXISTS blogging_platform.user_details (
    user_id         bigint,
    firstname       text,
    surname         text,
    university_name text,
    major_name      text,
    company_name    text,
    job_title       text
);

ALTER TABLE IF EXISTS blogging_platform.user_details
ADD CONSTRAINT user_details_pkey PRIMARY KEY (user_id);

ALTER TABLE IF EXISTS blogging_platform.user_details
ADD CONSTRAINT user_details_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE CASCADE;

--changeset haurylau:4
CREATE TABLE IF NOT EXISTS blogging_platform.role (
    role_id   bigint GENERATED BY DEFAULT AS IDENTITY,
    role_name text NOT NULL UNIQUE
);

ALTER TABLE IF EXISTS blogging_platform.role
ADD CONSTRAINT role_pkey PRIMARY KEY (role_id);

--changeset haurylau:5
CREATE TABLE IF NOT EXISTS blogging_platform.user_role (
    user_id bigint,
    role_id bigint
);

ALTER TABLE blogging_platform.user_role
ADD CONSTRAINT user_role_pkey PRIMARY KEY (user_id, role_id);

ALTER TABLE IF EXISTS blogging_platform.user_role
ADD CONSTRAINT user_details_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE CASCADE,
ADD CONSTRAINT user_details_role_fkey FOREIGN KEY (role_id) REFERENCES blogging_platform.role(role_id) ON DELETE CASCADE;

--changeset haurylau:6
CREATE TABLE IF NOT EXISTS blogging_platform.post (
    post_id      bigint GENERATED BY DEFAULT AS IDENTITY,
    user_id      bigint      NOT NULL,
    title        text        NOT NULL,
    content      text        NOT NULL,
    published_at timestamptz NOT NULL
);

ALTER TABLE IF EXISTS blogging_platform.post
ADD CONSTRAINT post_pkey PRIMARY KEY (post_id);

ALTER TABLE IF EXISTS blogging_platform.post
ADD CONSTRAINT post_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE SET NULL;

--changeset haurylau:7
CREATE TABLE IF NOT EXISTS blogging_platform.post_reaction (
    post_id       bigint,
    user_id       bigint NOT NULL,
    reaction_type text   NOT NULL
);

ALTER TABLE IF EXISTS blogging_platform.post_reaction
ADD CONSTRAINT post_reaction_pkey PRIMARY KEY (post_id);

ALTER TABLE IF EXISTS blogging_platform.post_reaction
ADD CONSTRAINT post_reaction_post_fkey FOREIGN KEY (post_id) REFERENCES blogging_platform.post(post_id) ON DELETE CASCADE,
ADD CONSTRAINT post_reaction_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE CASCADE;

ALTER TABLE blogging_platform.post_reaction
ADD CONSTRAINT post_reaction_post_user_key UNIQUE (post_id, user_id);

--changeset haurylau:8
CREATE TABLE IF NOT EXISTS blogging_platform.tag (
    tag_id   bigint GENERATED BY DEFAULT AS IDENTITY,
    tag_name text NOT NULL UNIQUE
);

ALTER TABLE IF EXISTS blogging_platform.tag
ADD CONSTRAINT tag_pkey PRIMARY KEY (tag_id);

--changeset haurylau:9
CREATE TABLE IF NOT EXISTS blogging_platform.post_tag (
    post_id bigint,
    tag_id  bigint
);

ALTER TABLE blogging_platform.post_tag
ADD CONSTRAINT post_tag_pkey PRIMARY KEY (post_id, tag_id);

ALTER TABLE IF EXISTS blogging_platform.post_tag
ADD CONSTRAINT post_tag_post_fkey FOREIGN KEY (post_id) REFERENCES blogging_platform.post(post_id) ON DELETE CASCADE,
ADD CONSTRAINT post_tag_tag_fkey FOREIGN KEY (tag_id) REFERENCES blogging_platform.tag(tag_id) ON DELETE CASCADE;

--changeset haurylau:10
CREATE TABLE IF NOT EXISTS blogging_platform.comment (
    comment_id   bigint GENERATED BY DEFAULT AS IDENTITY,
    post_id      bigint      NOT NULL,
    user_id      bigint      NOT NULL,
    content      text        NOT NULL,
    published_at timestamptz NOT NULL
);

ALTER TABLE IF EXISTS blogging_platform.comment
ADD CONSTRAINT comment_pkey PRIMARY KEY (comment_id);

ALTER TABLE IF EXISTS blogging_platform.comment
ADD CONSTRAINT comment_post_fkey FOREIGN KEY (post_id) REFERENCES blogging_platform.post(post_id) ON DELETE SET NULL,
ADD CONSTRAINT comment_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE SET NULL;

--changeset haurylau:11
CREATE TABLE IF NOT EXISTS blogging_platform.comment_reaction (
    comment_id    bigint,
    user_id       bigint NOT NULL,
    reaction_type text   NOT NULL
);

ALTER TABLE IF EXISTS blogging_platform.comment_reaction
ADD CONSTRAINT comment_reaction_pkey PRIMARY KEY (comment_id);

ALTER TABLE IF EXISTS blogging_platform.comment_reaction
ADD CONSTRAINT comment_reaction_comment_fkey FOREIGN KEY (comment_id) REFERENCES blogging_platform.comment(comment_id) ON DELETE CASCADE,
ADD CONSTRAINT comment_reaction_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id) ON DELETE CASCADE;

ALTER TABLE blogging_platform.comment_reaction
ADD CONSTRAINT comment_reaction_comment_user_key UNIQUE (comment_id, user_id);

--changeset haurylau:12
CREATE TABLE IF NOT EXISTS blogging_platform.order (
    order_id   bigint GENERATED BY DEFAULT AS IDENTITY,
    post_id    bigint      NOT NULL UNIQUE,
    user_id    bigint      NOT NULL,
    ordered_at timestamptz NOT NULL,
    message    text,
    status     text        NOT NULL
);

ALTER TABLE IF EXISTS blogging_platform.order
ADD CONSTRAINT order_pkey PRIMARY KEY (order_id);

ALTER TABLE IF EXISTS blogging_platform.order
ADD CONSTRAINT order_post_fkey FOREIGN KEY (post_id) REFERENCES blogging_platform.post(post_id),
ADD CONSTRAINT order_user_fkey FOREIGN KEY (user_id) REFERENCES blogging_platform.user(user_id);
